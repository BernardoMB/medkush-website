// Import animations
// @import '~animate.css/animate.css';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming

// Import theming functionality
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// See the following guide for Angular Material theming
// https://coursetro.com/posts/code/116/Create-your-own-Angular-5-Material-Theme
// Or see the following video
// https://www.youtube.com/watch?v=kHbMm7psBag

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// Incluide common styles
@include mat-core();

// Define color palettes

$dark-primary-text: rgba(black, 0.87);
$dark-secondary-text: rgba(black, 0.54);
$dark-disabled-text: rgba(black, 0.38);
$dark-dividers: rgba(black, 0.12);
$dark-focused: rgba(black, 0.12);
$light-primary-text: white;
$light-secondary-text: rgba(white, 0.7);
$light-disabled-text: rgba(white, 0.5);
$light-dividers: rgba(white, 0.12);
$light-focused: rgba(white, 0.12);

$mat-aurora-green: (
  50 : #f1f8ea,
  100 : #dbeecb,
  200 : #c4e3a9,
  300 : #acd787,
  400 : #9acf6d,
  500 : #88c653,
  600 : #80c04c,
  700 : #75b942,
  800 : #6bb139,
  900 : #58a429,
  A100 : #efffe5,
  A200 : #ceffb2,
  A400 : #adff7f,
  A700 : #9dff66,
  contrast: (
      50 : #000000,
      100 : #000000,
      200 : #000000,
      300 : #000000,
      400 : #000000,
      500 : #000000,
      600 : #000000,
      700 : #000000,
      800 : #000000,
      900 : #ffffff,
      A100 : #000000,
      A200 : #000000,
      A400 : #000000,
      A700 : #000000,
  ),
);

$mat-aurora-orange: (
  50 : #e9ece6,
  100 : #c8cec0,
  200 : #a3ae96,
  300 : #7e8e6b,
  400 : #63754c,
  500 : #475d2c,
  600 : #405527,
  700 : #374b21,
  800 : #2f411b,
  900 : #203010,
  A100 : #b1ff6e,
  A200 : #96ff3b,
  A400 : #7aff08,
  A700 : #6eee00,
  contrast: (
      50 : #000000,
      100 : #000000,
      200 : #000000,
      300 : #000000,
      400 : #ffffff,
      500 : #ffffff,
      600 : #ffffff,
      700 : #ffffff,
      800 : #ffffff,
      900 : #ffffff,
      A100 : #000000,
      A200 : #000000,
      A400 : #000000,
      A700 : #000000,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// Define the primary pallete
// * (the second parameter passed to mat-palette() is the default primary color)
// * (the third parameter passed to mat-palette() is the lighter variant of the color [some components use these values])
// * (the Fourth parameter passed to mat-palette() is the darker variant of the color [some components use these values])
$aurora-website-primary: mat-palette($mat-aurora-green, 700, 400, 900);
// Define the accent pallete  (the second parameter passed to mat-palette() is the default accent color)
$aurora-website-accent: mat-palette($mat-aurora-orange, 700, 400, 900);
// The warn palette is optional (defaults to red).
// Provide an optional warning pallete
$aurora-website-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
// Create a light mixin
$aurora-website-theme: mat-light-theme(
  $aurora-website-primary,
  $aurora-website-accent,
  $aurora-website-warn
);
// Create a dark mixin
// $custom-theme: mat-dark-theme($custom-primary, $custom-accent);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// Create the theme
@include angular-material-theme($aurora-website-theme);

// ALTERNATIVE THEME
$alt-primary: mat-palette($mat-yellow);
$alt-accent: mat-palette($mat-grey, 200);
$alt-warn: mat-palette($mat-red);
$alt-theme: mat-dark-theme($alt-primary, $alt-accent, $alt-warn);
.alternative {
  @include angular-material-theme($alt-theme);
}

/* You can add global styles to this file, and also import other style files */

html,
body {
  min-height: 100vh;
  height: 100%;
  background-color: #fafbfc;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

.no-scroll {
  overflow-y: hidden;
}

.divider {
  margin-top: 104px;
  box-shadow: 0 0 1px 1px rgba(20, 23, 28, 0.1), 0 3px 1px 0 rgba(20, 23, 28, 0.1);
  background-color: black;
}

.coming-soon-section {
  display: flex;
  justify-content: center;
  .coming-soon-card {
    margin: 60px;
  }
}


// Change autocomplete styles in WebKit

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  // border: 1px dashed greenyellow;
  -webkit-text-fill-color: #408e2d;
  box-shadow: 0 0 0px 1000px rgba(255, 255, 255, 0) inset;
  transition: background-color 5000s ease-in-out 0s;
}

// Change scrollbars styles

body::-webkit-scrollbar {
  width: 8px;
  background-color: #f5f5f5;
}
body::-webkit-scrollbar-track {
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  background-color: #f5f5f5;
}
body::-webkit-scrollbar-thumb {
  background-color: #c1c1c1;
  // border: 2px solid #555555;
}

// Custom classes

$focus-outline-thickeness: 2px;
.focus-outline {
  &:focus {
    outline: $focus-outline-thickeness solid greenyellow;
    outline-style: dashed;
    @media screen and (max-width: 450px) {
      outline: none;
    }
  }
}

// Modify Angular Material classes

.custom-mat-dialog-container {
  .mat-dialog-container {
    padding: 0px;
  }
}

.custom-modal-backdrop {
  background: rgba(black, 0.54);
}

.mat-form-field-appearance-outline .mat-form-field-outline-thick {
  color: #408e2d;
}

.mat-tab-body-content {
  overflow-y: hidden !important;
}

// Ngx Paginator styles

.pagination-controls .ngx-pagination {
  padding-left: 0px;
  display: flex;
  justify-content: center;
  .current {
    border-radius: 10px;
    background: #1f5e11;
  }
  li {
    a {
      outline: unset;
      &:focus {
        outline: $focus-outline-thickeness solid greenyellow;
        outline-style: dashed;
      }
      &:hover {
        border-radius: 10px;
      }
    }
  }
}

// Toasts

// Option 1 (Regular style)

/* @import '~ngx-toastr/toastr'; */

// Option 2 (Bootstrap 4 styles)
// Requires bootstrap

/* @import '~bootstrap/scss/bootstrap';
@import '~ngx-toastr/toastr-bs4-alert'; */

// Option 2 [Alternative] (Bootstrap 4 styles)
// if you'd like to use it without importing all of bootstrap it requires only functions, variables and mixins.

@import '~bootstrap/scss/functions';
@import '~bootstrap/scss/variables';
@import '~bootstrap/scss/mixins';
@import '~ngx-toastr/toastr-bs4-alert';

// Swiper
// Commented because building issues
@import '~swiper/css/swiper.min.css';

